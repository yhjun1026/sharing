<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sharing.dao.mapper.GoodsBorrowDtlMapper">
  <resultMap id="BaseResultMap" type="cn.sharing.dao.entity.GoodsBorrowDtl">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="goods_uuid" jdbcType="VARCHAR" property="goodsUuid" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="compensate_amt" jdbcType="DECIMAL" property="compensateAmt" />
    <result column="borrow_descrip" jdbcType="VARCHAR" property="borrowDescrip" />
    <result column="deposit_amt" jdbcType="DECIMAL" property="depositAmt" />
    <result column="return_descrip" jdbcType="VARCHAR" property="returnDescrip" />
    <result column="borrow_uuid" jdbcType="VARCHAR" property="borrowUuid" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, goods_uuid, goods_code, goods_name, goods_price, compensate_amt, borrow_descrip, 
    deposit_amt, return_descrip, borrow_uuid, memo
  </sql>
  <select id="selectByExample" parameterType="cn.sharing.dao.entity.GoodsBorrowDtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shgoodsborrowdtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shgoodsborrowdtl
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shgoodsborrowdtl
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sharing.dao.entity.GoodsBorrowDtlExample">
    delete from shgoodsborrowdtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sharing.dao.entity.GoodsBorrowDtl">
    insert into shgoodsborrowdtl (uuid, goods_uuid, goods_code, 
      goods_name, goods_price, compensate_amt, 
      borrow_descrip, deposit_amt, return_descrip, 
      borrow_uuid, memo)
    values (#{uuid,jdbcType=VARCHAR}, #{goodsUuid,jdbcType=VARCHAR}, #{goodsCode,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{compensateAmt,jdbcType=DECIMAL}, 
      #{borrowDescrip,jdbcType=VARCHAR}, #{depositAmt,jdbcType=DECIMAL}, #{returnDescrip,jdbcType=VARCHAR}, 
      #{borrowUuid,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sharing.dao.entity.GoodsBorrowDtl">
    insert into shgoodsborrowdtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="goodsUuid != null">
        goods_uuid,
      </if>
      <if test="goodsCode != null">
        goods_code,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="compensateAmt != null">
        compensate_amt,
      </if>
      <if test="borrowDescrip != null">
        borrow_descrip,
      </if>
      <if test="depositAmt != null">
        deposit_amt,
      </if>
      <if test="returnDescrip != null">
        return_descrip,
      </if>
      <if test="borrowUuid != null">
        borrow_uuid,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="goodsUuid != null">
        #{goodsUuid,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="compensateAmt != null">
        #{compensateAmt,jdbcType=DECIMAL},
      </if>
      <if test="borrowDescrip != null">
        #{borrowDescrip,jdbcType=VARCHAR},
      </if>
      <if test="depositAmt != null">
        #{depositAmt,jdbcType=DECIMAL},
      </if>
      <if test="returnDescrip != null">
        #{returnDescrip,jdbcType=VARCHAR},
      </if>
      <if test="borrowUuid != null">
        #{borrowUuid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sharing.dao.entity.GoodsBorrowDtlExample" resultType="java.lang.Long">
    select count(*) from shgoodsborrowdtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shgoodsborrowdtl
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsUuid != null">
        goods_uuid = #{record.goodsUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCode != null">
        goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.compensateAmt != null">
        compensate_amt = #{record.compensateAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowDescrip != null">
        borrow_descrip = #{record.borrowDescrip,jdbcType=VARCHAR},
      </if>
      <if test="record.depositAmt != null">
        deposit_amt = #{record.depositAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.returnDescrip != null">
        return_descrip = #{record.returnDescrip,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowUuid != null">
        borrow_uuid = #{record.borrowUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shgoodsborrowdtl
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      goods_uuid = #{record.goodsUuid,jdbcType=VARCHAR},
      goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      compensate_amt = #{record.compensateAmt,jdbcType=DECIMAL},
      borrow_descrip = #{record.borrowDescrip,jdbcType=VARCHAR},
      deposit_amt = #{record.depositAmt,jdbcType=DECIMAL},
      return_descrip = #{record.returnDescrip,jdbcType=VARCHAR},
      borrow_uuid = #{record.borrowUuid,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sharing.dao.entity.GoodsBorrowDtl">
    update shgoodsborrowdtl
    <set>
      <if test="goodsUuid != null">
        goods_uuid = #{goodsUuid,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="compensateAmt != null">
        compensate_amt = #{compensateAmt,jdbcType=DECIMAL},
      </if>
      <if test="borrowDescrip != null">
        borrow_descrip = #{borrowDescrip,jdbcType=VARCHAR},
      </if>
      <if test="depositAmt != null">
        deposit_amt = #{depositAmt,jdbcType=DECIMAL},
      </if>
      <if test="returnDescrip != null">
        return_descrip = #{returnDescrip,jdbcType=VARCHAR},
      </if>
      <if test="borrowUuid != null">
        borrow_uuid = #{borrowUuid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sharing.dao.entity.GoodsBorrowDtl">
    update shgoodsborrowdtl
    set goods_uuid = #{goodsUuid,jdbcType=VARCHAR},
      goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      compensate_amt = #{compensateAmt,jdbcType=DECIMAL},
      borrow_descrip = #{borrowDescrip,jdbcType=VARCHAR},
      deposit_amt = #{depositAmt,jdbcType=DECIMAL},
      return_descrip = #{returnDescrip,jdbcType=VARCHAR},
      borrow_uuid = #{borrowUuid,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.sharing.dao.entity.GoodsBorrowDtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shgoodsborrowdtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="cn.sharing.dao.entity.GoodsBorrowDtlExample" resultType="long" >
    select sum(${sumCol}) from shgoodsborrowdtl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into shgoodsborrowdtl  (uuid, goods_uuid, goods_code, 
        goods_name, goods_price, compensate_amt, 
        borrow_descrip, deposit_amt, return_descrip, 
        borrow_uuid, memo)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.uuid,jdbcType=VARCHAR}, #{item.goodsUuid,jdbcType=VARCHAR}, #{item.goodsCode,jdbcType=VARCHAR}, 
        #{item.goodsName,jdbcType=VARCHAR}, #{item.goodsPrice,jdbcType=DECIMAL}, #{item.compensateAmt,jdbcType=DECIMAL}, 
        #{item.borrowDescrip,jdbcType=VARCHAR}, #{item.depositAmt,jdbcType=DECIMAL}, #{item.returnDescrip,jdbcType=VARCHAR}, 
        #{item.borrowUuid,jdbcType=VARCHAR}, #{item.memo,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>