<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharing.dao.mapper.PayInfoMapper">
  <resultMap id="BaseResultMap" type="com.sharing.dao.entity.PayInfo">
    <id column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="PAYID" jdbcType="VARCHAR" property="payid" />
    <result column="TRANSTYPE" jdbcType="INTEGER" property="transtype" />
    <result column="PAYTYPE" jdbcType="INTEGER" property="paytype" />
    <result column="TRADENO" jdbcType="VARCHAR" property="tradeno" />
    <result column="OUTTRADENO" jdbcType="VARCHAR" property="outtradeno" />
    <result column="PAYAMT" jdbcType="DECIMAL" property="payamt" />
    <result column="PAYUSER" jdbcType="VARCHAR" property="payuser" />
    <result column="PAYTIME" jdbcType="TIMESTAMP" property="paytime" />
    <result column="ORITRADENO" jdbcType="VARCHAR" property="oritradeno" />
    <result column="ORIOUTTRADENO" jdbcType="VARCHAR" property="oriouttradeno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UUID, PAYID, TRANSTYPE, PAYTYPE, TRADENO, OUTTRADENO, PAYAMT, PAYUSER, PAYTIME, ORITRADENO, 
    ORIOUTTRADENO
  </sql>
  <select id="selectByExample" parameterType="com.sharing.dao.entity.PayInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shpayinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shpayinfo
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shpayinfo
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sharing.dao.entity.PayInfoExample">
    delete from shpayinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sharing.dao.entity.PayInfo">
    insert into shpayinfo (UUID, PAYID, TRANSTYPE, 
      PAYTYPE, TRADENO, OUTTRADENO, 
      PAYAMT, PAYUSER, PAYTIME, 
      ORITRADENO, ORIOUTTRADENO)
    values (#{uuid,jdbcType=VARCHAR}, #{payid,jdbcType=VARCHAR}, #{transtype,jdbcType=INTEGER}, 
      #{paytype,jdbcType=INTEGER}, #{tradeno,jdbcType=VARCHAR}, #{outtradeno,jdbcType=VARCHAR}, 
      #{payamt,jdbcType=DECIMAL}, #{payuser,jdbcType=VARCHAR}, #{paytime,jdbcType=TIMESTAMP}, 
      #{oritradeno,jdbcType=VARCHAR}, #{oriouttradeno,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sharing.dao.entity.PayInfo">
    insert into shpayinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        UUID,
      </if>
      <if test="payid != null">
        PAYID,
      </if>
      <if test="transtype != null">
        TRANSTYPE,
      </if>
      <if test="paytype != null">
        PAYTYPE,
      </if>
      <if test="tradeno != null">
        TRADENO,
      </if>
      <if test="outtradeno != null">
        OUTTRADENO,
      </if>
      <if test="payamt != null">
        PAYAMT,
      </if>
      <if test="payuser != null">
        PAYUSER,
      </if>
      <if test="paytime != null">
        PAYTIME,
      </if>
      <if test="oritradeno != null">
        ORITRADENO,
      </if>
      <if test="oriouttradeno != null">
        ORIOUTTRADENO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="payid != null">
        #{payid,jdbcType=VARCHAR},
      </if>
      <if test="transtype != null">
        #{transtype,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="tradeno != null">
        #{tradeno,jdbcType=VARCHAR},
      </if>
      <if test="outtradeno != null">
        #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="payamt != null">
        #{payamt,jdbcType=DECIMAL},
      </if>
      <if test="payuser != null">
        #{payuser,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oritradeno != null">
        #{oritradeno,jdbcType=VARCHAR},
      </if>
      <if test="oriouttradeno != null">
        #{oriouttradeno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sharing.dao.entity.PayInfoExample" resultType="java.lang.Long">
    select count(*) from shpayinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shpayinfo
    <set>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.payid != null">
        PAYID = #{record.payid,jdbcType=VARCHAR},
      </if>
      <if test="record.transtype != null">
        TRANSTYPE = #{record.transtype,jdbcType=INTEGER},
      </if>
      <if test="record.paytype != null">
        PAYTYPE = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.tradeno != null">
        TRADENO = #{record.tradeno,jdbcType=VARCHAR},
      </if>
      <if test="record.outtradeno != null">
        OUTTRADENO = #{record.outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="record.payamt != null">
        PAYAMT = #{record.payamt,jdbcType=DECIMAL},
      </if>
      <if test="record.payuser != null">
        PAYUSER = #{record.payuser,jdbcType=VARCHAR},
      </if>
      <if test="record.paytime != null">
        PAYTIME = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oritradeno != null">
        ORITRADENO = #{record.oritradeno,jdbcType=VARCHAR},
      </if>
      <if test="record.oriouttradeno != null">
        ORIOUTTRADENO = #{record.oriouttradeno,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shpayinfo
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      PAYID = #{record.payid,jdbcType=VARCHAR},
      TRANSTYPE = #{record.transtype,jdbcType=INTEGER},
      PAYTYPE = #{record.paytype,jdbcType=INTEGER},
      TRADENO = #{record.tradeno,jdbcType=VARCHAR},
      OUTTRADENO = #{record.outtradeno,jdbcType=VARCHAR},
      PAYAMT = #{record.payamt,jdbcType=DECIMAL},
      PAYUSER = #{record.payuser,jdbcType=VARCHAR},
      PAYTIME = #{record.paytime,jdbcType=TIMESTAMP},
      ORITRADENO = #{record.oritradeno,jdbcType=VARCHAR},
      ORIOUTTRADENO = #{record.oriouttradeno,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sharing.dao.entity.PayInfo">
    update shpayinfo
    <set>
      <if test="payid != null">
        PAYID = #{payid,jdbcType=VARCHAR},
      </if>
      <if test="transtype != null">
        TRANSTYPE = #{transtype,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        PAYTYPE = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="tradeno != null">
        TRADENO = #{tradeno,jdbcType=VARCHAR},
      </if>
      <if test="outtradeno != null">
        OUTTRADENO = #{outtradeno,jdbcType=VARCHAR},
      </if>
      <if test="payamt != null">
        PAYAMT = #{payamt,jdbcType=DECIMAL},
      </if>
      <if test="payuser != null">
        PAYUSER = #{payuser,jdbcType=VARCHAR},
      </if>
      <if test="paytime != null">
        PAYTIME = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="oritradeno != null">
        ORITRADENO = #{oritradeno,jdbcType=VARCHAR},
      </if>
      <if test="oriouttradeno != null">
        ORIOUTTRADENO = #{oriouttradeno,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sharing.dao.entity.PayInfo">
    update shpayinfo
    set PAYID = #{payid,jdbcType=VARCHAR},
      TRANSTYPE = #{transtype,jdbcType=INTEGER},
      PAYTYPE = #{paytype,jdbcType=INTEGER},
      TRADENO = #{tradeno,jdbcType=VARCHAR},
      OUTTRADENO = #{outtradeno,jdbcType=VARCHAR},
      PAYAMT = #{payamt,jdbcType=DECIMAL},
      PAYUSER = #{payuser,jdbcType=VARCHAR},
      PAYTIME = #{paytime,jdbcType=TIMESTAMP},
      ORITRADENO = #{oritradeno,jdbcType=VARCHAR},
      ORIOUTTRADENO = #{oriouttradeno,jdbcType=VARCHAR}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.sharing.dao.entity.PayInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shpayinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="com.sharing.dao.entity.PayInfoExample" resultType="long" >
    select sum(${sumCol}) from shpayinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into shpayinfo  (UUID, PAYID, TRANSTYPE, 
        PAYTYPE, TRADENO, OUTTRADENO, 
        PAYAMT, PAYUSER, PAYTIME, 
        ORITRADENO, ORIOUTTRADENO)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.uuid,jdbcType=VARCHAR}, #{item.payid,jdbcType=VARCHAR}, #{item.transtype,jdbcType=INTEGER}, 
        #{item.paytype,jdbcType=INTEGER}, #{item.tradeno,jdbcType=VARCHAR}, #{item.outtradeno,jdbcType=VARCHAR}, 
        #{item.payamt,jdbcType=DECIMAL}, #{item.payuser,jdbcType=VARCHAR}, #{item.paytime,jdbcType=TIMESTAMP}, 
        #{item.oritradeno,jdbcType=VARCHAR}, #{item.oriouttradeno,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>