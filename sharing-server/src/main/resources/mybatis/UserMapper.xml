<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sharing.platform.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.sharing.platform.dao.entity.User">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="group_uuid" jdbcType="VARCHAR" property="groupUuid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="lst_upd_time" jdbcType="TIMESTAMP" property="lstUpdTime" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="store_uuid" jdbcType="VARCHAR" property="storeUuid" />
    <result column="store_code" jdbcType="VARCHAR" property="storeCode" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="stat" jdbcType="TINYINT" property="stat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, code, name, type, group_uuid, password, login_time, mobile, lst_upd_time, memo, 
    store_uuid, store_code, store_name, stat
  </sql>
  <select id="selectByExample" parameterType="cn.sharing.platform.dao.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shuser
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shuser
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sharing.platform.dao.entity.UserExample">
    delete from shuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sharing.platform.dao.entity.User">
    insert into shuser (uuid, code, name, 
      type, group_uuid, password, 
      login_time, mobile, lst_upd_time, 
      memo, store_uuid, store_code, 
      store_name, stat)
    values (#{uuid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{groupUuid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{mobile,jdbcType=VARCHAR}, #{lstUpdTime,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=VARCHAR}, #{storeUuid,jdbcType=VARCHAR}, #{storeCode,jdbcType=VARCHAR}, 
      #{storeName,jdbcType=VARCHAR}, #{stat,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.sharing.platform.dao.entity.User">
    insert into shuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="groupUuid != null">
        group_uuid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="lstUpdTime != null">
        lst_upd_time,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="storeUuid != null">
        store_uuid,
      </if>
      <if test="storeCode != null">
        store_code,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="stat != null">
        stat,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="groupUuid != null">
        #{groupUuid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="lstUpdTime != null">
        #{lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="storeUuid != null">
        #{storeUuid,jdbcType=VARCHAR},
      </if>
      <if test="storeCode != null">
        #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        #{stat,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sharing.platform.dao.entity.UserExample" resultType="java.lang.Long">
    select count(*) from shuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shuser
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.groupUuid != null">
        group_uuid = #{record.groupUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.lstUpdTime != null">
        lst_upd_time = #{record.lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.storeUuid != null">
        store_uuid = #{record.storeUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.storeCode != null">
        store_code = #{record.storeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.stat != null">
        stat = #{record.stat,jdbcType=TINYINT},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shuser
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      group_uuid = #{record.groupUuid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      lst_upd_time = #{record.lstUpdTime,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      store_uuid = #{record.storeUuid,jdbcType=VARCHAR},
      store_code = #{record.storeCode,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      stat = #{record.stat,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sharing.platform.dao.entity.User">
    update shuser
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="groupUuid != null">
        group_uuid = #{groupUuid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="lstUpdTime != null">
        lst_upd_time = #{lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="storeUuid != null">
        store_uuid = #{storeUuid,jdbcType=VARCHAR},
      </if>
      <if test="storeCode != null">
        store_code = #{storeCode,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        stat = #{stat,jdbcType=TINYINT},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sharing.platform.dao.entity.User">
    update shuser
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      group_uuid = #{groupUuid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      mobile = #{mobile,jdbcType=VARCHAR},
      lst_upd_time = #{lstUpdTime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      store_uuid = #{storeUuid,jdbcType=VARCHAR},
      store_code = #{storeCode,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      stat = #{stat,jdbcType=TINYINT}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.sharing.platform.dao.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shuser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="cn.sharing.platform.dao.entity.UserExample" resultType="long" >
    select sum(${sumCol}) from shuser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into shuser  (uuid, code, name, 
        type, group_uuid, password, 
        login_time, mobile, lst_upd_time, 
        memo, store_uuid, store_code, 
        store_name, stat)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.uuid,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=VARCHAR}, #{item.groupUuid,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.loginTime,jdbcType=TIMESTAMP}, #{item.mobile,jdbcType=VARCHAR}, #{item.lstUpdTime,jdbcType=TIMESTAMP}, 
        #{item.memo,jdbcType=VARCHAR}, #{item.storeUuid,jdbcType=VARCHAR}, #{item.storeCode,jdbcType=VARCHAR}, 
        #{item.storeName,jdbcType=VARCHAR}, #{item.stat,jdbcType=TINYINT})
      </foreach>
    </if>
  </insert>
</mapper>