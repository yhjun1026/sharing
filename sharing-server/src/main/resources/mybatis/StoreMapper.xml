<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sharing.paltform.dao.mapper.StoreMapper">
  <resultMap id="BaseResultMap" type="cn.sharing.platform.dao.entity.Store">
    <id column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="LICENCE" jdbcType="VARCHAR" property="licence" />
    <result column="LASTUPDTIME" jdbcType="TIMESTAMP" property="lastupdtime" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="UPPERUUID" jdbcType="VARCHAR" property="upperuuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UUID, CODE, NAME, LICENCE, LASTUPDTIME, MEMO, UPPERUUID
  </sql>
  <select id="selectByExample" parameterType="cn.sharing.platform.dao.entity.StoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shstore
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shstore
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sharing.platform.dao.entity.StoreExample">
    delete from shstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sharing.platform.dao.entity.Store">
    insert into shstore (UUID, CODE, NAME, 
      LICENCE, LASTUPDTIME, MEMO, 
      UPPERUUID)
    values (#{uuid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{licence,jdbcType=VARCHAR}, #{lastupdtime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, 
      #{upperuuid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sharing.platform.dao.entity.Store">
    insert into shstore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        UUID,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="licence != null">
        LICENCE,
      </if>
      <if test="lastupdtime != null">
        LASTUPDTIME,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
      <if test="upperuuid != null">
        UPPERUUID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="licence != null">
        #{licence,jdbcType=VARCHAR},
      </if>
      <if test="lastupdtime != null">
        #{lastupdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="upperuuid != null">
        #{upperuuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sharing.platform.dao.entity.StoreExample" resultType="java.lang.Long">
    select count(*) from shstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shstore
    <set>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.licence != null">
        LICENCE = #{record.licence,jdbcType=VARCHAR},
      </if>
      <if test="record.lastupdtime != null">
        LASTUPDTIME = #{record.lastupdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.upperuuid != null">
        UPPERUUID = #{record.upperuuid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shstore
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      LICENCE = #{record.licence,jdbcType=VARCHAR},
      LASTUPDTIME = #{record.lastupdtime,jdbcType=TIMESTAMP},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      UPPERUUID = #{record.upperuuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sharing.platform.dao.entity.Store">
    update shstore
    <set>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="licence != null">
        LICENCE = #{licence,jdbcType=VARCHAR},
      </if>
      <if test="lastupdtime != null">
        LASTUPDTIME = #{lastupdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="upperuuid != null">
        UPPERUUID = #{upperuuid,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sharing.platform.dao.entity.Store">
    update shstore
    set CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      LICENCE = #{licence,jdbcType=VARCHAR},
      LASTUPDTIME = #{lastupdtime,jdbcType=TIMESTAMP},
      MEMO = #{memo,jdbcType=VARCHAR},
      UPPERUUID = #{upperuuid,jdbcType=VARCHAR}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.sharing.platform.dao.entity.StoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shstore
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="cn.sharing.platform.dao.entity.StoreExample" resultType="long" >
    select sum(${sumCol}) from shstore
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into shstore  (UUID, CODE, NAME, 
        LICENCE, LASTUPDTIME, MEMO, 
        UPPERUUID)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.uuid,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.licence,jdbcType=VARCHAR}, #{item.lastupdtime,jdbcType=TIMESTAMP}, #{item.memo,jdbcType=VARCHAR}, 
        #{item.upperuuid,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>