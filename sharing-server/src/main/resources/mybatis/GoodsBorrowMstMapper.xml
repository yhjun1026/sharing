<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharing.dao.mapper.GoodsBorrowMstMapper">
  <resultMap id="BaseResultMap" type="com.sharing.dao.entity.GoodsBorrowMst">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="bill_number" jdbcType="VARCHAR" property="billNumber" />
    <result column="stat" jdbcType="VARCHAR" property="stat" />
    <result column="borrow_type" jdbcType="VARCHAR" property="borrowType" />
    <result column="borrower" jdbcType="VARCHAR" property="borrower" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="plan_return_time" jdbcType="TIMESTAMP" property="planReturnTime" />
    <result column="real_return_time" jdbcType="TIMESTAMP" property="realReturnTime" />
    <result column="borrow_operator" jdbcType="VARCHAR" property="borrowOperator" />
    <result column="borrow_operate_time" jdbcType="TIMESTAMP" property="borrowOperateTime" />
    <result column="return_operator" jdbcType="VARCHAR" property="returnOperator" />
    <result column="return_operate_time" jdbcType="TIMESTAMP" property="returnOperateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="lst_upd_time" jdbcType="TIMESTAMP" property="lstUpdTime" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="store_uuid" jdbcType="VARCHAR" property="storeUuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, bill_number, stat, borrow_type, borrower, mobile, address, plan_return_time, 
    real_return_time, borrow_operator, borrow_operate_time, return_operator, return_operate_time, 
    create_time, lst_upd_time, memo, store_uuid
  </sql>
  <select id="selectByExample" parameterType="com.sharing.dao.entity.GoodsBorrowMstExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shgoodsborrowmst
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shgoodsborrowmst
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shgoodsborrowmst
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sharing.dao.entity.GoodsBorrowMstExample">
    delete from shgoodsborrowmst
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sharing.dao.entity.GoodsBorrowMst">
    insert into shgoodsborrowmst (uuid, bill_number, stat, 
      borrow_type, borrower, mobile, 
      address, plan_return_time, real_return_time, 
      borrow_operator, borrow_operate_time, return_operator, 
      return_operate_time, create_time, lst_upd_time, 
      memo, store_uuid)
    values (#{uuid,jdbcType=VARCHAR}, #{billNumber,jdbcType=VARCHAR}, #{stat,jdbcType=VARCHAR}, 
      #{borrowType,jdbcType=VARCHAR}, #{borrower,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{planReturnTime,jdbcType=TIMESTAMP}, #{realReturnTime,jdbcType=TIMESTAMP}, 
      #{borrowOperator,jdbcType=VARCHAR}, #{borrowOperateTime,jdbcType=TIMESTAMP}, #{returnOperator,jdbcType=VARCHAR}, 
      #{returnOperateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{lstUpdTime,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=VARCHAR}, #{storeUuid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sharing.dao.entity.GoodsBorrowMst">
    insert into shgoodsborrowmst
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="billNumber != null">
        bill_number,
      </if>
      <if test="stat != null">
        stat,
      </if>
      <if test="borrowType != null">
        borrow_type,
      </if>
      <if test="borrower != null">
        borrower,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="planReturnTime != null">
        plan_return_time,
      </if>
      <if test="realReturnTime != null">
        real_return_time,
      </if>
      <if test="borrowOperator != null">
        borrow_operator,
      </if>
      <if test="borrowOperateTime != null">
        borrow_operate_time,
      </if>
      <if test="returnOperator != null">
        return_operator,
      </if>
      <if test="returnOperateTime != null">
        return_operate_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lstUpdTime != null">
        lst_upd_time,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="storeUuid != null">
        store_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="billNumber != null">
        #{billNumber,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        #{stat,jdbcType=VARCHAR},
      </if>
      <if test="borrowType != null">
        #{borrowType,jdbcType=VARCHAR},
      </if>
      <if test="borrower != null">
        #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="planReturnTime != null">
        #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null">
        #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowOperator != null">
        #{borrowOperator,jdbcType=VARCHAR},
      </if>
      <if test="borrowOperateTime != null">
        #{borrowOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnOperator != null">
        #{returnOperator,jdbcType=VARCHAR},
      </if>
      <if test="returnOperateTime != null">
        #{returnOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lstUpdTime != null">
        #{lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="storeUuid != null">
        #{storeUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sharing.dao.entity.GoodsBorrowMstExample" resultType="java.lang.Long">
    select count(*) from shgoodsborrowmst
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shgoodsborrowmst
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.billNumber != null">
        bill_number = #{record.billNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.stat != null">
        stat = #{record.stat,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowType != null">
        borrow_type = #{record.borrowType,jdbcType=VARCHAR},
      </if>
      <if test="record.borrower != null">
        borrower = #{record.borrower,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.planReturnTime != null">
        plan_return_time = #{record.planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realReturnTime != null">
        real_return_time = #{record.realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.borrowOperator != null">
        borrow_operator = #{record.borrowOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowOperateTime != null">
        borrow_operate_time = #{record.borrowOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnOperator != null">
        return_operator = #{record.returnOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.returnOperateTime != null">
        return_operate_time = #{record.returnOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lstUpdTime != null">
        lst_upd_time = #{record.lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.storeUuid != null">
        store_uuid = #{record.storeUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shgoodsborrowmst
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      bill_number = #{record.billNumber,jdbcType=VARCHAR},
      stat = #{record.stat,jdbcType=VARCHAR},
      borrow_type = #{record.borrowType,jdbcType=VARCHAR},
      borrower = #{record.borrower,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      plan_return_time = #{record.planReturnTime,jdbcType=TIMESTAMP},
      real_return_time = #{record.realReturnTime,jdbcType=TIMESTAMP},
      borrow_operator = #{record.borrowOperator,jdbcType=VARCHAR},
      borrow_operate_time = #{record.borrowOperateTime,jdbcType=TIMESTAMP},
      return_operator = #{record.returnOperator,jdbcType=VARCHAR},
      return_operate_time = #{record.returnOperateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      lst_upd_time = #{record.lstUpdTime,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      store_uuid = #{record.storeUuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sharing.dao.entity.GoodsBorrowMst">
    update shgoodsborrowmst
    <set>
      <if test="billNumber != null">
        bill_number = #{billNumber,jdbcType=VARCHAR},
      </if>
      <if test="stat != null">
        stat = #{stat,jdbcType=VARCHAR},
      </if>
      <if test="borrowType != null">
        borrow_type = #{borrowType,jdbcType=VARCHAR},
      </if>
      <if test="borrower != null">
        borrower = #{borrower,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="planReturnTime != null">
        plan_return_time = #{planReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null">
        real_return_time = #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowOperator != null">
        borrow_operator = #{borrowOperator,jdbcType=VARCHAR},
      </if>
      <if test="borrowOperateTime != null">
        borrow_operate_time = #{borrowOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnOperator != null">
        return_operator = #{returnOperator,jdbcType=VARCHAR},
      </if>
      <if test="returnOperateTime != null">
        return_operate_time = #{returnOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lstUpdTime != null">
        lst_upd_time = #{lstUpdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="storeUuid != null">
        store_uuid = #{storeUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sharing.dao.entity.GoodsBorrowMst">
    update shgoodsborrowmst
    set bill_number = #{billNumber,jdbcType=VARCHAR},
      stat = #{stat,jdbcType=VARCHAR},
      borrow_type = #{borrowType,jdbcType=VARCHAR},
      borrower = #{borrower,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      plan_return_time = #{planReturnTime,jdbcType=TIMESTAMP},
      real_return_time = #{realReturnTime,jdbcType=TIMESTAMP},
      borrow_operator = #{borrowOperator,jdbcType=VARCHAR},
      borrow_operate_time = #{borrowOperateTime,jdbcType=TIMESTAMP},
      return_operator = #{returnOperator,jdbcType=VARCHAR},
      return_operate_time = #{returnOperateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      lst_upd_time = #{lstUpdTime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      store_uuid = #{storeUuid,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.sharing.dao.entity.GoodsBorrowMstExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shgoodsborrowmst
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="com.sharing.dao.entity.GoodsBorrowMstExample" resultType="long" >
    select sum(${sumCol}) from shgoodsborrowmst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into shgoodsborrowmst  (uuid, bill_number, stat, 
        borrow_type, borrower, mobile, 
        address, plan_return_time, real_return_time, 
        borrow_operator, borrow_operate_time, return_operator, 
        return_operate_time, create_time, lst_upd_time, 
        memo, store_uuid)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.uuid,jdbcType=VARCHAR}, #{item.billNumber,jdbcType=VARCHAR}, #{item.stat,jdbcType=VARCHAR}, 
        #{item.borrowType,jdbcType=VARCHAR}, #{item.borrower,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
        #{item.address,jdbcType=VARCHAR}, #{item.planReturnTime,jdbcType=TIMESTAMP}, #{item.realReturnTime,jdbcType=TIMESTAMP}, 
        #{item.borrowOperator,jdbcType=VARCHAR}, #{item.borrowOperateTime,jdbcType=TIMESTAMP}, #{item.returnOperator,jdbcType=VARCHAR}, 
        #{item.returnOperateTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.lstUpdTime,jdbcType=TIMESTAMP}, 
        #{item.memo,jdbcType=VARCHAR}, #{item.storeUuid,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>